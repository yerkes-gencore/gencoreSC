% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runSoupX.R
\name{runSoupX}
\alias{runSoupX}
\title{Wrapper for running SoupX}
\usage{
runSoupX(
  unfiltered_mat_path,
  filtered_mat_path,
  clusters_path,
  doPlot = TRUE,
  forceAccept = FALSE
)
}
\arguments{
\item{unfiltered_mat_path}{Path to unfiltered counts matrix file}

\item{filtered_mat_path}{Path to Cellranger filtered counts matrix file}

\item{clusters_path}{Path to Cellranger initial clustering data file}

\item{doPlot}{Create a plot showing the density of estimates?}

\item{forceAccept}{Passed to \code{\link[SoupX]{setContaminationFraction}}.  Should we allow very high contamination fractions to be used.}
}
\value{
An object of class SoupChannel
}
\description{
Runs SoupX and saves the adjusted counts to a SoupChannel object for
downstream diagnostics and QC. Paths to input files can be provided manually,
or you can try to search for them with \code{findSoupXFiles()}.
}
\examples{
\dontrun{
soupx_files <- lapply(samples$FileID, function(x){
  findSoupXFiles(file.path(config$rootDir, config$alignmentDir, x))
})
names(soupx_files) <- samples$Label
sc <- lapply(soupx_files, function(x){
  runSoupX(x[['unfiltered_mat_path']], x[['filtered_mat_path']], x[['clusters_path']])
})

## Extract contamination estimates

extractSoupXContamEst <- function(sc){
  rho <- sc$fit$rhoEst
  rho_low <- sc$fit$rhoFWHM[1]
  rho_high <- sc$fit$rhoFWHM[2]
  return(list(rho_low = rho_low, rho = rho, rho_high = rho_high))
}

tmp <- data.table::rbindlist(lapply(sc, extractSoupXContamEst), idcol = '.id')
}
}
