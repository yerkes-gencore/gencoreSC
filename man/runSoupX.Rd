% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runSoupX.R
\name{runSoupX}
\alias{runSoupX}
\title{Small wrapper for running SoupX}
\usage{
runSoupX(tod, toc, clusters)
}
\arguments{
\item{tod}{Table of droplets.  A matrix with columns being each droplet and rows each gene.}

\item{toc}{Table of counts.  Just those columns of \code{tod} that contain cells.}

\item{clusters}{A named vector, where entries are the cluster IDs and names are cellIDs.  If no names are provided, the order is assumed to match the order in \code{sc$metaData}.}
}
\value{
An object of class SoupChannel
}
\description{
Runs SoupX and saves the adjusted counts to a SoupChannel object for
downstream diagnostics and QC
}
\examples{
\dontrun{
filt <- file.path(here::here(
  'cellranger_out/outs/per_sample_outs/sample/count/',
  'sample_filtered_feature_bc_matrix'))
filt <- Read10X(filt)
raw <- file.path(here::here(
  'cellranger_out/outs/per_sample_outs/sample/count/',
  'multi/count/raw_feature_bc_matrix'))
raw <- Read10X(raw)
clus <- file.path(here::here(
  '../cellranger_out/outs/per_sample_outs/sample/count/',
  'per_sample_outs/sample/count/',
  'analysis/clustering/gene_expression_graphclust/clusters.csv'))
clus <- read.csv(clus)
clusters <- clus$Cluster
names(clusters) <- clus$Barcode

sc <- runSoupX(tod = raw$`Gene Expression`,
               toc = filt$`Gene Expression`,
               clus = clusters)
}
}
