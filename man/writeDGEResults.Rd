% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/writeDGEResults.R
\name{writeDGEResults}
\alias{writeDGEResults}
\title{Write differential expression test results to excel sheet}
\usage{
writeDGEResults(
  results,
  sheet_names = names(results),
  output_name = paste0("differentially_expressed_genes.xlsx"),
  outdir = here::here("outputs")
)
}
\arguments{
\item{results}{List of outputs from \code{Seurat::FindMarkers()} or a similar function}

\item{sheet_names}{List of names for sheets, defaults to names of \code{results}}

\item{output_name}{Name of file}

\item{outdir}{Location of file}
}
\value{
\code{NULL}
}
\description{
Take a list of differential expression results tables returned from \code{Seurat::FindMarkers()}
or a similar function and write them to an excel worksheet, with one sheet for each result.
}
\examples{
\dontrun{
dge_results$NK_adaptive.post.1D3_vs_cnt <- FindMarkers(object = cd8_obj,
                                                       group.by = 'condition.timepoint',
                                                       ident.1 = 'post-ATI.1D3', ident.2 = 'post-ATI.control',
                                                       subset.ident = 'NK (adaptive)',
                                                       features = dge_genes,
                                                       logfc.threshold = 0, min.pct = 0,
                                                       test.use = 'MAST', assay = 'RNA')
dge_results$NK_adaptive.pre.1D3_vs_cnt <- FindMarkers(object = cd8_obj,
                                                      group.by = 'condition.timepoint',
                                                      ident.1 = 'pre-ATI.1D3', ident.2 = 'pre-ATI.control',
                                                      subset.ident = 'NK (adaptive)',
                                                      features = dge_genes,
                                                      logfc.threshold = 0, min.pct = 0,
                                                      test.use = 'MAST', assay = 'RNA')
writeDGEResults(dge_results)
}
}
