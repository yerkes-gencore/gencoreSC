% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/update_sc.R
\name{update_sc}
\alias{update_sc}
\title{Updates a soup channel to only include cells remaining after processing and
adds dimensional reduction loadings}
\usage{
update_sc(
  sc,
  seur_obj,
  reduction = "umap",
  gsub_start_pattern = "(^.+_)([ACTG]+.*)",
  gsub_start_replace = "\\\\2",
  gsub_end_pattern = "_\\\\d+$",
  gsub_end_replace = ""
)
}
\arguments{
\item{sc}{A soup channel object}

\item{seur_obj}{A Seurat object processed to only contain cells of interest}

\item{gsub_start_pattern}{Pattern to replace at beginning of cell names}

\item{gsub_start_replace}{Replace term for \code{gsub_start_pattern}}

\item{gsub_end_pattern}{A second pattern to replace, after first is done.
This is intended for trailing pattern, but technically is just another \code{gsub()} call.}

\item{gsub_end_replace}{Replace term for \code{gsub_end_pattern}}
}
\value{
A soup channel object from \code{SoupX}
}
\description{
Takes a soup channel from a capture and a seurat object from that same
capture to parse the soup channel based on what cells are left in the
processed seurat object. This function also takes reduction loadings
from the Seurat object and adds them to the soup channel, which
allows additional plotting functions from \code{SoupX} to be used.
}
\details{
Since cell names may differ from the processed seurat object and soup channel,
there is some functionality to make the names agree between the two
objects. The defaults should catch most changes made by \code{Seurat::RenameCells()}
and the suffixes add by \code{Seurat::CreateSeuratObject()}.
}
\examples{
\dontrun{
## Where 'sc' is a list of soup channels and 'objs_filt_mapped' is a list of seurat objects
sc_parsed <- mapply(update_sc, sc, objs_filt_mapped, SIMPLIFY = FALSE)

## soup channels can now be used with other SoupX plotting functions
plotMarkerMap(sc_parsed$R1, 'IGLV2-11')

}
}
